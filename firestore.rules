rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isValidSong(noNumber) {
      let noNumberKeyList = ['name', 'withChords', 'withoutChords', 'checkRequired'];
      let keyList = noNumberKeyList.concat(['number']);
      return request.resource.data.keys().hasOnly(keyList)
        && request.resource.data.keys().hasAll(noNumber ? noNumberKeyList : keyList);
    }

    function isValidActiveEntityUpdate() {
      let requiredKeyList = ['active', 'displayName'];
      let keyList = requiredKeyList.concat(['songNumber']);
      return request.resource.data.keys().hasOnly(keyList)
        && request.resource.data.keys().hasAll(requiredKeyList)
        && request.resource.data.displayName == resource.data.displayName;
    }

    function isValidActiveEntityCreate() {
      let keyList = ['active', 'displayName'];
      return request.resource.data.keys().hasOnly(keyList)
        && request.resource.data.keys().hasAll(keyList);
    }

    match /songs/{song} {
      allow read: if request.auth != null;
      allow update: if request.auth != null
        && isValidSong(request.resource.data.checkRequired)
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        && (
      request.resource.data.checkRequired
        || request.resource.data.number == resource.data.number
      );
      allow create: if request.auth != null
        && isValidSong(true)
        && ('number' in request.resource.data.keys()) == false
        && request.resource.data.checkRequired == true;
    }
    match /active/{entity} {
      allow read: if request.auth != null;
      allow update: if request.auth != null && isValidActiveEntityUpdate()
        && request.auth.uid == request.resource.id;
      allow create: if request.auth != null && isValidActiveEntityCreate()
        && request.auth.uid == request.resource.id;
    }
    match /users/{user} {
      allow read: if request.auth != null
        && request.auth.uid == resource.id;
    }
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
